/*
Icon classes can be used entirely standalone. They are named after their original file names.

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.icon-cv-orange {
  background-image: url(sprite.png);
  background-position: 0px 0px;
  width: 41px;
  height: 15px;
}
.icon-facebook-icon {
  background-image: url(sprite.png);
  background-position: -24px -15px;
  width: 10px;
  height: 22px;
}
.icon-fb-orange {
  background-image: url(sprite.png);
  background-position: -55px -21px;
  width: 6px;
  height: 13px;
}
.icon-g--icon {
  background-image: url(sprite.png);
  background-position: 0px -38px;
  width: 19px;
  height: 19px;
}
.icon-g-plus-orange {
  background-image: url(sprite.png);
  background-position: -41px -21px;
  width: 14px;
  height: 13px;
}
.icon-in-orange {
  background-image: url(sprite.png);
  background-position: -19px -38px;
  width: 13px;
  height: 12px;
}
.icon-linkedin-icon {
  background-image: url(sprite.png);
  background-position: 0px -15px;
  width: 24px;
  height: 23px;
}
.icon-twitter-icon {
  background-image: url(sprite.png);
  background-position: -41px 0px;
  width: 26px;
  height: 21px;
}
.icon-twitter-orange {
  background-image: url(sprite.png);
  background-position: -32px -38px;
  width: 13px;
  height: 10px;
}
